<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.backend.itryp">
	<!-- 마켓글 전체,  카테고리 조회(한인택시(공항픽업), 투어프로그램, 숙소, 렌트카) + 조건검색search(콤보박스)(숙소만|프로그램만|가격) -->
	<select id="marketList" parameterType="map" resultType="map">
		SELECT MARKET_NO       
  				 ,u.USER_NICKNAME         
					 ,m.TYPE_MARKET    
					 ,m.MARKET_CATEGORY  
					 ,m.MARKET_TITLE     
					 ,m.MARKET_CONTENT  
					 ,m.MARKET_PRICE    
					 ,m.MARKET_DATE 
		  FROM TB_MARKET m, TB_USER u
  	  WHERE m.user_id = u.user_id
  	  AND m.MARKET_CATEGORY != '공지사항'
			<if test='market_category!=null and !market_catetory.equals("전체")'>
				AND m.market_category = #{market_category}
			</if>
			<if test='search != null and search.equals("작성자")'>
				AND u.user_nickname LIKE '%'||#{keyword}||'%'
			</if>
			<if test='search != null and search.equals("제목")'>
				AND m.market_title LIKE '%'||#{keyword}||'%'
			</if>
			<if test='search != null and search.equals("내용")'>
				AND m.market_content LIKE '%'||#{keyword}||'%'
			</if>
			<if test='market_price != null'>
    		AND m.MARKET_PRICE BETWEEN #{min_price} AND #{max_price}
			</if>
		ORDER BY m.market_no ASC
	</select>
	
	<!-- 마켓글 상세조회 -->
	<select id="marketDetail" parameterType="map" resultType="map">
		SELECT MARKET_NO       
  				 ,u.USER_NICKNAME         
					 ,m.TYPE_MARKET    
					 ,m.MARKET_CATEGORY  
					 ,m.MARKET_TITLE     
					 ,m.MARKET_CONTENT  
					 ,m.MARKET_PRICE    
					 ,m.MARKET_DATE 
		  FROM TB_MARKET m, TB_USER u
  	  WHERE m.user_id = u.user_id
  	  AND m.market_no = #{market_no}
	</select>
	

	<!--마켓 글쓰기 -->
	<insert id="marketInsert" parameterType="map" useGeneratedKeys="true" keyColumn="market_no" keyProperty="market_no">
		INSERT INTO TB_MARKET
		           (MARKET_NO
	             ,USER_ID
		           ,TYPE_MARKET    
							 ,MARKET_CATEGORY  
							 ,MARKET_TITLE     
							 ,MARKET_CONTENT  
							 ,MARKET_PRICE    
							 ,MARKET_DATE 
		            )
		    VALUES (TB_MARKET_NO_SEQ.NEXTVAL
		 					, #{market_no}
	            , #{user_id}
	            , #{type_market}
	            , #{market_category}
	            , #market_title}
	            , #{market_content}
	            , #{market_price}
	            , #{market_date}
	            , TO_CHAR(sysdate, 'YYYY-MM-DD HH:MM:SS')
		          )
	</insert>
	<!-- 판매자가 가능 날짜 갯수 넣음 -->
	<insert id="marketInsert" parameterType="map" useGeneratedKeys="true" keyColumn="market_no" keyProperty="market_no">
		
	
	</insert>
	<!-- Quill image 추가 - 이미지 선택할때마다 인서트 -->
	<insert id="mImageInsert" parameterType="map">
		INSERT INTO TB_M_FILE
								(file_no
							 , market_no
							 , file_name
		    			 , file_url
		    			 , file_size
		    			 )
		    VALUES (TB_M_FILE_NO_SEQ.NEXTVAL
				    	 , #{market_no}
							 , #{file_name}
							 , #{file_url}
							 , #{file_size}
							 )
	</insert>
	
		<!-- Quill image 수정 - market_no 추가 -->
	<update id="mImageUpdate" parameterType="list">
		<foreach collection="list" item="item" separator=";" open="DECLARE BEGIN" close="; END;">
			UPDATE TB_M_FILE
				SET market_no = #{item.market_no}
			WHERE file_name = LTRIM(#{item.file_name})
		</foreach>
	</update>	
	
	<!-- 마켓 글수정 -->
	<update id="marketUpdate" parameterType="map">
		UPDATE TB_MARKET
		<trim prefix="SET" prefixOverrides=",">
		<if test="market_category != null and market_category.length() != 0">
		    , market_category = #{market_category}
		</if>
		<if test="market_title != null and market_title.length() != 0">
		    , market_title = #{market_title}
		</if>
		<if test="market_content != null and market_content.length() != 0">
		    , market_content = #{market_content}
		</if>
		<if test="market_price != null and market_price.length() != 0">
		    , market_price = #{market_price}
		</if>
		<if test="plus_like != null and plus_like > 0">
			, market_like = market_like + 1
		</if>
		<if test="minus_like != null and minus_like > 0">
			, market_like = market_like - 1
		</if>
		</trim>
		WHERE market_no = #{market_no}
		AND user_id=#{user_id}
	</update>
	
	<!-- Quill image 삭제 -->
	<delete id="mImageDelete" parameterType="map">
		DELETE FROM TB_B_FILE
		WHERE board_no = #{board_no}
	</delete>
	
	<!-- 커뮤니티 글 삭제 -->
	<delete id="marketDelete" parameterType="map">
		DELETE FROM TB_BOARD
		WHERE board_no = #{board_no}
	</delete>
	<!-- 신고 - report_type 글:0(보드에서 처리) / 댓글:1 / 마켓글:2 / 리뷰:3 -->
	<insert id="mReport" parameterType="map">
		INSERT INTO TB_REPORT
								(report_no
							 , user_id
							 , report_type
							 , report_group
							 , report_user
							 , report_reason
							 , report_date
							 )
				VALUES (TB_REPORT_NO_SEQ.NEXTVAL
							, #{user_id}
							, #{report_type}
							, #{report_group}
							, #{report_user}
							, #{report_reason}
							, TO_CHAR(sysdate, 'YYYY-MM-DD HH:MM:SS')
							 )
	</insert>
	<!-- 리뷰 전체 조회 정렬- 프론트에서sort(높은평점순-high, 낮은-low, 좋아요많은순-like, new, old)-->
	<select id="reviewList" parameterType="map" resultType="map">
		SELECT u.user_id
		     , u.user_nickname
	       , m.review_no
	       , m.market_no
	       , m.type_review
	       , m.review_star
	       , m.review_like
	       , m.review_content
	       , m.review_date  
		  FROM TB_M_REVIEW m, TB_USER u
  	  WHERE m.user_id = u.user_id
  	  AND m.review_no = #{review_no}
  	  <if test='sort != null and sort.equals("high")'>
  	  	ORDER BY m.review_star DESC
  	  </if>
  	  <if test='sort != null and sort.equals("low")'>
  	  	ORDER BY m.review_star ASC
  	  </if>
  	  <if test='sort != null and sort.equals("like")'>
  	  	ORDER BY m.review_like DESC
  	  </if>
  	  <if test='sort != null and sort.equals("new")'>
  	  	ORDER BY m.review_date DESC
  	  </if>
  	  <if test='sort != null and sort.equals("old")'>
  	  	ORDER BY m.review_date ASC
  	  </if>
	</select>
	
	<!-- 리뷰 쓰기 TB_M_REVIEW -->
	<insert id="reviewInsert" parameterType="map">
		INSERT INTO TB_M_REVIEW 
			           (review_no
			          , market_no
		            , user_id
		            , review_star
		           	, review_content
		            , review_date
			          )
			    VALUES (TB_M_REVIEW_SEQ.NEXTVAL
			    			, #{market_no}
		            , #{user_id}
		            , #{review_star}
		            , #{review_content}
		            , TO_CHAR(sysdate, 'YYYY-MM-DD HH:MM:SS')
			          )
	</insert>
	
	<!-- 리뷰 수정 -->
	<update id="reviewUpdate" parameterType="map">
		UPDATE TB_M_REVIEW 
		<trim prefix="SET" prefixOverrides=",">
		<if test="review_content != null and review_content.length() != 0">
			, review_content = #{review_content}
		</if>
		<if test="review_star != null and review_star > 0">
			, review_star = #{review_star}
		</if>
		</trim>
		WHERE review_no = #{review_no}
	</update>
	
	<!-- 리뷰 삭제 -->
	<delete id="reviewDelete" parameterType="map">
		DELETE FROM TB_M_REVIEW 
		WHERE review_no = #{review_no}
			AND market_no = #{market_no}
	</delete>
	
	<!--리뷰 좋아요 - 글:0 / 댓글:1 / 리뷰:2(마켓에서 처리) -->
	<insert id="reviewLike" parameterType="map">
		INSERT INTO TB_LIKE
								(user_id
							 , like_type
							 , like_group
						 <if test="like_step != null and like_step > 0">
						 	 , like_step
						 </if>
							 , like_date
							 )
				 VALUES (#{user_id}
				 			 , #{like_type}
				 			 , #{like_group}
				  	 <if test="like_step != null and like_step > 0">
				 			 , #{like_step}
						 </if>
				 			 , TO_CHAR(sysdate, 'YYYY-MM-DD HH:MM:SS')
							 )
	</insert>
	
	<!-- 리뷰좋아요 취소 - 글:0 / 댓글:1 / 리뷰:2(마켓에서 처리) -->
	<update id="reviewDislike" parameterType="map">
    UPDATE TB_LIKE
    SET like_count = like_count - 1
    WHERE like_group = #{like_group}
      AND user_id = #{user_id}
      AND like_count >= 1;
	</update>
	<!--리뷰 갯수세기  -->
	<select id="reviewLikeCount" parameterType="map">
		SELECT COUNT(user_id) FROM TB_LIKE 
		WHERE like_group = #{like_group}
	</select>
	<!-- qna 쓰기 qna_step이 0:문의글 1:문의답글  -->
	<insert id="reviewInsert" parameterType="map">
		INSERT INTO TB_QNA
			           (qna_no
			          , qna_step
			          , market_no
		            , user_id
		            , qna_content
		           	, qna_date
		            , qna_sort
			          )
			    VALUES(
								TB_QNA_NO_SEQ.NEXTVAL,
								#{qna_step},
								#{market_no},
								#{user_id},
								#{qna_title},
								#{qna_content},
								TO_CHAR(sysdate, 'YYYY-MM-DD HH:MM:SS'),
								0
								)
	</insert>
	<!-- qna 문의 글 삭제-->
	<delete id="qnaDelete" parameterType="map">
		DELETE FROM TB_M_REVIEW 
		WHERE qna_no = #{qna_no}
			AND market_no = #{market_no}
	</delete>
	<!-- qna문의 글 조회 search조건검색 -->
	<select id="qnaList" parameterType="map" resultType="map">
		SELECT q.qna_no
		, u.user_id
		, u.user_nickname
		, q.market_no
		, q.qna_title
		, q.qna_content
		, q.qna_date
		FROM TB_QNA q, TB_USER u
		WHERE q.user_id = u.user_id
		<if test='search != null and search.equals("작성자")'>
			AND u.user_nickname LIKE '%'||#{keyword}||'%'
		</if>
		<if test='search != null and search.equals("제목")'>
			AND q.qna_title LIKE '%'||#{keyword}||'%'
		</if>
		<if test='search != null and search.equals("내용")'>
			AND q.qna_content LIKE '%'||#{keyword}||'%'
		</if>
		ORDER BY q.qna_no ASC
	</select>
	
</mapper>