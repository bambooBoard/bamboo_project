<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.backend.itryp">
	
	<!-- 사용자가 작성한 글 목록 불러오기 -->
	<!-- 글 제목 / 조회수 / 사진여부(?) / 작성일 / 댓글 수 / 좋아요 수 / 글번호 -->
	<select id="getMyBoardList" parameterType="map" resultType="map">
		SELECT b.board_no,
				b.board_category,
				b.board_title,
				b.board_date,
				b.board_hit,
				b.type_board,
         		c.comment_count,
         		l.like_count
		  FROM TB_BOARD b,
				(SELECT COUNT(user_id) comment_count, board_no FROM TB_B_COMMENT GROUP BY board_no) c,
				(SELECT COUNT(user_id) like_count, like_no FROM TB_LIKE GROUP BY like_no) l,
				(SELECT COUNT(file_no) file_count, file_no, board_no FROM TB_B_FILE GROUP BY board_no, file_no) f
		 WHERE b.user_id = #{user_id}
				AND b.board_no = c.board_no(+)
				AND b.board_no = l.like_no(+)
				AND b.board_no = f.board_no(+)
				AND b.board_status = 0
				AND b.board_category != '공지사항'
		 ORDER BY b.board_no DESC
	</select>
	
	<!-- 사용자가 작성한 댓글 목록 불러오기 -->
	<!-- 글제목 / 댓글 내용 / 작성일 / (좋아요 수) -->
	<select id="getMyRepleList" parameterType="map" resultType="map">
		SELECT b.board_title,
				c.comment_no,
				c.comment_content,
				c.comment_date,
				l.like_count
		  FROM TB_BOARD b,
		  		TB_B_COMMENT c,
				(SELECT COUNT(user_Id) like_count, like_step, like_group FROM tb_like WHERE like_type = 1 GROUP BY like_step, like_group) l
		 WHERE c.comment_no = l.like_group(+)
		   AND c.comment_step = l.like_step(+)
		   AND b.board_no = c.board_no
		   AND c.user_id = #{user_id}
		   AND c.type_comment = 1
		   AND c.comment_status = 0
		 ORDER BY c.comment_no ASC, c.comment_step ASC
	</select>
	
	<!-- 사용자가 작성한 리뷰 목록 불러오기 -->
	<!-- 마켓 제목 / 리뷰 내용 / 별점 / 작성일 / (좋아요 수) -->
	<select id="getMyReviewList" parameterType="map" resultType="map">
		SELECT m.market_title,
				r.review_no,
				r.type_review,
				r.review_star,
				r.review_content,
				r.review_date,
				l.like_count
		  FROM TB_M_REVIEW r,
				TB_USER u,
				TB_MARKET m,
				(SELECT COUNT(user_id) like_count, like_group FROM TB_LIKE WHERE like_type = 2 GROUP BY like_group) l
		 WHERE r.user_id = #{user_id}
		   AND r.review_no = m.market_no
		   AND r.review_no = l.like_group(+)
		<if test='sort != null and sort.equals("new")'>
			ORDER BY r.review_date DESC
		</if>
		<if test='sort != null and sort.equals("old")'>
			ORDER BY r.review_date ASC
		</if>
	</select>
	
	<!-- 사용자가 좋아요한 글 목록 불러오기 -->
	<!-- 글 제목 / (글 내용) / 작성일 / 조회수 / 좋아요? -->
	<select id="getMyLikeList" parameterType="map" resultType="map">
		SELECT b.board_title,
				b.board_date,
				b.board_hit,
				b.board_content,
				l.like_count
		  FROM TB_BOARD b,
		  		(SELECT COUNT(like_no) like_count, user_id, like_date, like_type FROM TB_LIKE GROUP BY like_no, user_id, like_date, like_type) l
		 WHERE l.user_id = #{user_id}
		   AND l.like_type = 0
		  ORDER BY l.like_date DESC
	</select>
	
	<!-- 사용자 문의글 목록 불러오기 -->
	<!-- 글 제목 / 작성일 / 답변 여부 /  -->
	<select id="getMyQNAList" parameterType="map" resultType="map">
		SELECT q.qna_title,
				q.qna_step,
				q.market_no,
				q.qna_content,
				q.qna_date
		  FROM TB_QNA q
		 WHERE q.user_id = #{user_id}
		 ORDER BY q.qna_no DESC
	</select>
	
	<!-- 주문 목록 불러오기 -->
	<select id="myOrderList" parameterType="map" resultType="map">
		SELECT o.order_no
		     , o.order_payment
		     , o.order_date
		     , o.order_status
		     , d.market_title
		     , c.item_count
		     , f.file_url
		     , r_count
		FROM TB_ORDER o
			, (SELECT d.order_no, m.market_title, d.market_no
			    FROM TB_MARKET m
			       , TB_ORDER_DETAIL d
			       , (SELECT d.order_no, MAX(m.market_price) max_price
			         FROM TB_MARKET m, TB_ORDER_DETAIL d
			         WHERE m.market_no = d.market_no
			         GROUP BY d.order_no) t
			    WHERE m.market_no = d.market_no
			    AND t.order_no = d.order_no
			    AND t.max_price = m.market_price) d
			, (SELECT d.order_no, COUNT(m.market_title) item_count
			    FROM TB_MARKET m, TB_ORDER_DETAIL d
			    WHERE m.market_no = d.market_no
			     GROUP BY d.order_no) c
			, (SELECT m.market_no, f.file_url
			    FROM TB_MARKET m, TB_M_FILE f
			    WHERE m.market_no = f.market_no
			    AND f.file_step = 1) f
			 , (SELECT d.market_no, COUNT(r.user_id) r_count
				FROM TB_M_REVIEW r, TB_ORDER_DETAIL d
				WHERE r.market_no(+) = d.market_no
				GROUP BY d.market_no) r
		WHERE o.order_no = c.order_no
		AND o.order_no = c.order_no
		AND o.order_no = d.order_no
		AND d.market_no = f.market_no
		AND r.market_no = d.market_no
		AND o.user_id = #{user_id}
		ORDER BY o.order_date DESC
	</select>
	
	<!-- 주문 상세보기 -->
	<select id="myOrderDetail" parameterType="map" resultType="map">
		SELECT d.detail_no
             , m.market_no
             , m.market_title
             , o.user_id
             , o.order_name
             , o.order_email
             , o.order_phone
             , o.coupon_no
             , o.order_total
             , c.coupon_name
             , c.coupon_rate
             , c.coupon_max
             , d.market_count
             , d.order_amount
             , d.market_order_date
             , p.pay_method
             , p.pay_date
             , p.pay_total
             , f.file_url
             , r_count
         FROM TB_MARKET m
            , TB_ORDER o
            , TB_ORDER_DETAIL d
            , TB_U_COUPON c
            , TB_PAY p
            , TB_M_FILE f
            , (SELECT d.market_no, COUNT(r.user_id) r_count
                FROM TB_M_REVIEW r, TB_ORDER_DETAIL d
                WHERE r.market_no(+) = d.market_no
                GROUP BY d.market_no) r
        WHERE m.market_no = d.market_no
        AND o.order_no = d.order_no
        AND c.coupon_no(+) = o.coupon_no
        AND p.order_no = o.order_no
        AND f.market_no = m.market_no
        AND r.market_no = d.market_no
		AND o.user_id = #{user_id}
		AND o.order_no = #{order_no}
	</select>
	
	<!-- 리뷰 등록 -->
	<insert id="myReviewInsert" parameterType="map">
		INSERT INTO TB_M_REVIEW
		         (review_no
		        , market_no
		        , user_id
		        , review_star
		        , review_content
		        , review_date
		        )
		VALUES (TB_M_REVIEW_NO_SEQ.NEXTVAL
			    , #{market_no}
			    , #{user_id}
			    , #{review_star}
			    , #{review_content}
			    , TO_CHAR(sysdate, 'YYYY-MM-DD HH24:MI:SS')
				)
	</insert>
</mapper>